# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/client/ResponseGetData.ipynb.

# %% auto 0
__all__ = ['ResponseGetData', 'ResponseGetDataOpenAi', 'ResponseGetDataSlack', 'ResponseGetDataSupabase']

# %% ../../nbs/client/ResponseGetData.ipynb 1
from typing import Any
from dataclasses import dataclass, field
from abc import abstractmethod

from slack_bolt.async_app import AsyncApp as AsyncSlackApp
from slack_sdk.web.async_client import AsyncSlackResponse

# %% ../../nbs/client/ResponseGetData.ipynb 3
@dataclass
class ResponseGetData:
    is_success: bool
    status : int
    response : Any

    @abstractmethod
    def from_res():
        pass




# %% ../../nbs/client/ResponseGetData.ipynb 4
@dataclass

class ResponseGetDataOpenAi(ResponseGetData):
    is_success: bool
    status : int
    response : Any
    raw : AsyncSlackResponse = field(default = None, repr = False)

    @staticmethod
    def from_res(res: AsyncSlackResponse):
        return ResponseGetDataOpenAi(
            is_success = True,
            status = 200,
            response = res.choices,
            raw = res
        )

# %% ../../nbs/client/ResponseGetData.ipynb 5
@dataclass
class ResponseGetDataSlack(ResponseGetData):
    is_success: bool
    status : int
    response : Any

    channel_id : str = None
    message_id : float = None
    app : AsyncSlackApp = field(repr = False , default = None)

    @classmethod
    def from_res(cls, res : AsyncSlackResponse, async_app :AsyncSlackApp, **kwargs):
        return cls(
            is_success=res["ok"],
            response=res.data,
            status = res.status_code,
            app = async_app,
            **kwargs
        )

# %% ../../nbs/client/ResponseGetData.ipynb 6
@dataclass
class ResponseGetDataSupabase(ResponseGetData):
    is_success: bool
    status : int
    response : Any
    raw:  Any  = field(repr = False, default = None)

    @classmethod
    def from_res(cls, res ):
        is_success = False

        if res.data:
            is_success= True

        return cls(
            is_success=is_success,
            response=res.data,
            status = 200 if is_success else 400,
            raw  = res
        )
