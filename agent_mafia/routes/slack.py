"""route functions for interacting with Slack via slackbolt"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/routes/slack.ipynb.

# %% auto 0
__all__ = ['get_channel_history']

# %% ../../nbs/routes/slack.ipynb 2
from slack_bolt.async_app import AsyncApp as AsyncSlackApp
from slack_sdk.errors import SlackApiError

from ..client.ResponseGetData import ResponseGetDataSlack

# %% ../../nbs/routes/slack.ipynb 3
from agent_mafia.client.MafiaError import MafiaError 
import os
from nbdev.showdoc import patch_to

# %% ../../nbs/routes/slack.ipynb 5
@patch_to(AsyncSlackApp)
async def who_am_i(self):
    res = await self.client.auth_test()

    return ResponseGetDataSlack.from_res(res = res, async_app = self)


# %% ../../nbs/routes/slack.ipynb 7
async def get_channel_history(async_app: AsyncSlackApp, channel_id: str, return_raw: bool = False):
    # Store conversation history
    # ID of the channel you want to send the message to

    try:
        # Call the conversations.history method using the WebClient
        # conversations.history returns the first 100 messages by default
        # These results are paginated, see: https://api.slack.com/methods/conversations.history$pagination
        res = await async_app.client.conversations_history(channel=channel_id)

        rgd = ResponseGetDataSlack.from_res(res = res, async_app = async_app)

        if return_raw:
            return rgd
        
        rgd.response = res.data['messages']
        return rgd

    except SlackApiError as e:
        raise MafiaError(exception = e, message = "Error fetching conversation history")

